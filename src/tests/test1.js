import { initTest, chooseAnswer } from "./forAllTests.js";
//база данных вопросы и ответы
const stages = [
  //этап 1
  {
    question: ["Что поможет дизайнеру избежать выгорания?"],
    //каждый ответ содержит текст и колво баллов
    answers: [
      {
        text: "Работать без перерывов, чтобы быстрее завершить проекты",
        count: 1,
      },
      {
        text: "Чередовать задачи, ставить границы и находить баланс",
        count: 0,
      },
      {
        text: "Игнорировать усталость и брать еще больше заказов",
        count: 0,
      },
      {
        text: "Уходить в полное уединение и избегать общения с коллегами",
        count: 0,
      },
    ],
  },

  //этап 2
  {
    question: ["Какой совет НЕ относится к способам профилактики выгорания?"],
    answers: [
      {
        text: "Чередуй типы задач",
        count: 0,
      },
      {
        text: " Заведи планер или трекер привычек",
        count: 0,
      },
      {
        text: "Никогда не отдыхай — время нельзя терять",
        count: 1,
      },
      {
        text: "Делай что-то вне дизайна — гуляй, читай, общайся",
        count: 0,
      },
    ],
  },

  //этап 3
  {
    question: ["Почему важно вести личные проекты или экспериментировать?"],
    answers: [
      {
        text: "Чтобы показать всем, что ты крутой",
        count: 1,
      },
      {
        text: "Чтобы собрать лайков в Telegram",
        count: 0,
      },
      {
        text: "Это помогает вернуть интерес и творческую энергию",
        count: 1,
      },
      {
        text: "Потому что так сказал твой арт-директор",
        count: 0,
      },
    ],
  },
];

const resultTable = [
  {
    header: "В следующий раз повезет [ ± _ ± ]",
    paragraph: "Побольше практикуйся и у тебя все получится!",
  },
  {
    header: "Кажется, надо еще раз повторить (づ ◕‿◕ )づ",
    paragraph: "Ты уже близок к правде",
  },
  {
    header: "Ты молодец, так держать ヽ(・∀・)ﾉ",
    paragraph: "Я в тебя верю, иди к своим целям",
  },
];

document.addEventListener("DOMContentLoaded", () => {
  initTest(stages);
  chooseAnswer(stages, resultTable);
});
